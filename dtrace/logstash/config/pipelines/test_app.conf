input {
    tcp {
        type => "nginx_access"
        mode => "server"
        port => 10000
        codec => multiline {
            patterns_dir => ["/usr/share/logstash/config/patterns"]
            pattern => "^%{NUMBER}"
            negate => true
            what => previous
        }
    }
    tcp {
        type => "simple_service"
        mode => "server"
        port => 10001
        codec => multiline {
            patterns_dir => ["/usr/share/logstash/config/patterns"]
            pattern => "^%{TIMESTAMP_ISO8601}"
            negate => true
            what => previous
        }
    }
    tcp {
        type => "balancer"
        mode => "server"
        port => 10002
    }
}

filter {
    if [type] == "nginx_access" {
        grok {
            patterns_dir => ["/usr/share/logstash/config/patterns"]
            match => {
                "message" => "(?m)%{NUMBER:ts} %{IP:src_ip} %{NGX_REQ_ID:rid} \"%{GREEDYDATA:data}\" %{INT:status}"
            }
        }
    } else if [type] == "simple_service" {
        grok {
            patterns_dir => ["/usr/share/logstash/config/patterns"]
            match => {
                "message" => [
                    "(?m)^%{TIMESTAMP_ISO8601:ts} %{IP:src_ip} %{SRV_NAME:src_name} %{SRV_NAME:srv_name} %{NGX_REQ_ID:rid} \"%{GREEDYDATA:data}\" %{INT:duration} %{INT:status}",
                    "(?m)^%{TIMESTAMP_ISO8601:ts} %{SRV_NAME:src_name} %{SRV_NAME:srv_name} %{NGX_REQ_ID:rid} \[%{PYTHON_LOG_LEVEL:level}\] %{GREEDYDATA:data}"
                ]       
            }
        }
    } else if [type] == "balancer" {
        grok {
            patterns_dir => ["/usr/share/logstash/config/patterns"]
            match => {
                "message" => [
                    "(?m)^%{NGX_REQ_ID:rid} %{TIMESTAMP_ISO8601:ts} %{PYTHON_LOG_LEVEL:level} %{SRV_NAME:src_name} %{SRV_NAME:srv_name} %{INT:status}",
                    "(?m)^%{WORD:rid} %{TIMESTAMP_ISO8601:ts} %{PYTHON_LOG_LEVEL:level} %{SRV_NAME:src_name} %{SRV_NAME:srv_name} %{WORD:ev_type}"
                ]
            }
        }
    }
    date {
        match => ["ts" , "ISO8601", "UNIX"]
        target => "ts"
    }
    prune {
        whitelist_names => [
            "^ts$",
            "^src_ip$",
            "^src_name$",
            "^srv_name$",
            "^rid$",
            "^data$",
            "^duration$",
            "^status$",
            "^level$",
            "^type$",
            "^ev_type$"
        ]
    }
}

output {
    stdout { }

    if [src] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "access-%{+YYYY.MM.dd}"
        }
    } else if [msg] {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "message-%{+YYYY.MM.dd}"
        }
    } else {
        elasticsearch {
            hosts => "elasticsearch:9200"
            index => "unknown-%{+YYYY.MM.dd}"
        }
    }
}
