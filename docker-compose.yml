version: '2'

services:
    nginx:
        container_name: nginx
        image: nginx:1.17.10-alpine
        restart: always
        volumes:
            - ${PWD}/test-app/service/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ${PWD}/test-app/service/nginx/conf.d:/etc/nginx/conf.d:ro
        ports:
            - 80:80
        depends_on:
            - calculator
            - logspout

    calculator:
        container_name: calculator_b
        image: balancer:latest
        restart: always
        build: ./test-app/service/balancer
        #environment:
            #- LOGSPOUT=ignore
        volumes:
            - ${PWD}/test-app/service/calculator/balancer.properties:/app/balancer.properties:ro
        depends_on:
            - calculator_srv

    calculator_srv:
        image: calculator:1.0
        restart: always
        build: ./test-app/service/calculator
        environment:
            - SRV_PARSER=parser
            - SRV_PRESENTER=presenter
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: gunicorn -w 2 -b :5000 --config /etc/gunicorn/config.py main:app
        depends_on:
            - parser
            - presenter
            - logspout

    parser:
        container_name: parser_b
        image: balancer:latest
        restart: always
        build: ./test-app/service/balancer
        #environment:
            #- LOGSPOUT=ignore
        volumes:
            - ${PWD}/test-app/service/parser/balancer.properties:/app/balancer.properties:ro
        depends_on:
            - parser_srv

    parser_srv:
        image: parser:1.0
        restart: always
        build: ./test-app/service/parser
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: gunicorn -w 2 -b :5000 --config /etc/gunicorn/config.py main:app
        depends_on:
            - logspout

    presenter:
        container_name: presenter_b
        image: balancer:latest
        restart: always
        build: ./test-app/service/balancer
        #environment:
            #- LOGSPOUT=ignore
        volumes:
            - ${PWD}/test-app/service/presenter/balancer.properties:/app/balancer.properties:ro
        depends_on:
            - parser_srv

    presenter_srv:
        image: presenter:1.0
        restart: always
        build: ./test-app/service/presenter
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: gunicorn -w 2 -b :5000 --config /etc/gunicorn/config.py main:app
        depends_on:
            - logspout

    logspout:
        image: csc_dtrace_logspout:1.0
        restart: always
        environment:
            - TCP_HOST=logstash
            - TCP_PORT=10000
        ports:
            - 1080:80
        volumes:
          - /var/run/docker.sock:/tmp/docker.sock
        command: "
            tcp://logstash:10000?filter.name=nginx,\
            tcp://logstash:10001?filter.name=*_srv_*,\
            tcp://logstash:10002?filter.name=*_b
        "
        depends_on:
            - logstash

    logstash:
        image: docker.elastic.co/logstash/logstash:7.7.0
        environment:
            - XPACK_MONITORING_ENABLED=false
            - LOGSPOUT=ignore
        volumes:
            - ${PWD}/dtrace/logstash/config/pipelines.yml:/usr/share/logstash/config/pipelines.yml:ro
            - ${PWD}/dtrace/logstash/config/pipelines:/usr/share/logstash/config/pipelines:ro
            - ${PWD}/dtrace/logstash/patterns:/usr/share/logstash/config/patterns:ro
        depends_on:
            - elasticsearch

    elasticsearch:
        image: docker.elastic.co/elasticsearch/elasticsearch:7.7.0
        container_name: elasticsearch
        environment:
            - node.name=es01
            - discovery.type=single-node
            - bootstrap.memory_lock=true
            - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
            - LOGSPOUT=ignore
        ulimits:
            memlock:
                soft: -1
                hard: -1
        ports:
            - 9200:9200
